apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: otel-collector
  namespace: observability
spec:
  image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.132.0
  mode: deployment
  config:
    receivers:
      otlp:
        protocols:
          grpc: {}
          http: {}
      prometheus/self:
        config:
          scrape_configs:
            - job_name: 'otel-collector'
              scrape_interval: 10s
              static_configs:
                - targets: ['0.0.0.0:8888']

    processors:
      batch: {}

    exporters:
      prometheus/export:
        endpoint: "0.0.0.0:8889"
      otlp/jaeger:
        endpoint: simplest-collector.observability.svc.cluster.local:4317
        tls:
          insecure: true
      debug: {}

    connectors:
      spanmetrics:
        histogram:
          explicit:
            buckets: [100us, 1ms, 2ms, 6ms, 10ms, 100ms, 250ms, 500ms, 1s, 2s, 6s, 10s]
        dimensions:
          - name: http.method
          - name: http.status_code
        exemplars:
          enabled: true
        aggregation_temporality: "AGGREGATION_TEMPORALITY_CUMULATIVE"
        metrics_flush_interval: 15s
        metrics_expiration: 5m

    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [otlp/jaeger, spanmetrics]

        metrics:
          receivers: [prometheus/self, spanmetrics]
          processors: [batch]
          exporters: [prometheus/export, debug]

    telemetry:
      metrics:
        address: 0.0.0.0:8888
